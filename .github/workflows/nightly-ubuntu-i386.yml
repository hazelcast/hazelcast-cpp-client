name: nightly-Ubuntu-i386

on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'

jobs:
  nightly-Ubuntu-i386:
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - type: Debug
            warn_as_err: ON
          - type: Release
            warn_as_err: OFF

        shared_libs:
          - toggle: OFF
            name: Static
          - toggle: ON
            name: Shared

        with_openssl:
          - toggle: OFF
            name: 'noSSL'
          - toggle: ON
            name: 'SSL'

    runs-on: ubuntu-latest
    container: i386/ubuntu

    name: >-
      Ubuntu-i386
      (${{ matrix.build_type.type }}, ${{ matrix.shared_libs.name }}, ${{ matrix.with_openssl.name }})

    steps:
      - name: Install Necessary Packages
        run: |
          apt-get update
          apt-get install -y net-tools build-essential libssl-dev curl automake m4 git maven openjdk-11-jre-headless

      - name: Make sure the target architecture is 32 bit
        run: |
          echo 'int main() { return sizeof(void*) != 4; }' > test.c
          gcc test.c -oa
          ./a
          rm a test.c

      - name: Install CMake
        run: |
          curl -Lo cmake-3.19.5.tar.gz \
                   https://github.com/Kitware/CMake/releases/download/v3.19.5/cmake-3.19.5.tar.gz
          tar xzf cmake-3.19.5.tar.gz
          rm cmake-3.19.5.tar.gz
          cd cmake-3.19.5
          ./bootstrap
          make
          make install
          cd ..
          rm -rf cmake-3.19.5

      - uses: actions/checkout@v1

      - name: Install Boost
        run: |
          ./scripts/install-boost.sh 1.75.0

      - name: Install Thrift
        run: |
          ./scripts/install-thrift.sh 0.13.0

      - name: Build & Install
        env:
          BUILD_DIR: build
          INSTALL: ON
          WARN_AS_ERR: ${{ matrix.build_type.warn_as_err }}
        run: |
          ./scripts/build-unix.sh                                         \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type.type }}            \
              -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/destination  \
              -DBUILD_SHARED_LIBS=${{ matrix.shared_libs.toggle }}        \
              -DWITH_OPENSSL=${{ matrix.with_openssl.toggle }}            \
              -DBUILD_TESTS=ON                                            \
              -DBUILD_EXAMPLES=OFF

      - name: Test
        env:
          BUILD_DIR: build
          HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          HZ_TEST_AWS_INSTANCE_PRIVATE_IP: ${{ secrets.HZ_TEST_AWS_INSTANCE_PRIVATE_IP }}
        run: |
          ./scripts/test-unix.sh

      - name: Verify Installation
        env:
          BUILD_DIR: build-examples
        run: |
          ./scripts/verify-installation-unix.sh                          \
              -DCMAKE_PREFIX_PATH=${{ github.workspace }}/destination    \
              -DWITH_OPENSSL=${{ matrix.with_openssl.toggle }}
